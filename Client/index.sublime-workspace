{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"ma",
				"maximum"
			],
			[
				"min",
				"minimum"
			],
			[
				"max",
				"maxAve"
			],
			[
				"te",
				"text"
			],
			[
				"stack",
				"StackOverflow"
			],
			[
				"done",
				"doneList"
			],
			[
				"don",
				"doneList"
			],
			[
				"upd",
				"updateMeans"
			],
			[
				"find",
				"findGroups"
			],
			[
				"clus",
				"clusterSize"
			],
			[
				"point",
				"pointsPerCluster"
			],
			[
				"font",
				"font-family"
			],
			[
				"group",
				"groupCount"
			],
			[
				"gro",
				"group"
			],
			[
				"grou",
				"groupCount"
			],
			[
				"new",
				"newMeans"
			],
			[
				"curt",
				"currentExists"
			],
			[
				"cu",
				"currentExists"
			],
			[
				"backlo",
				"backlogged"
			],
			[
				"selec",
				"selectAll"
			],
			[
				"data",
				"dataset"
			],
			[
				"cur",
				"current"
			],
			[
				"curren",
				"currentExists"
			],
			[
				"curr",
				"currentExists"
			],
			[
				"marin",
				"margin-top"
			],
			[
				"bakc",
				"background-color"
			],
			[
				"answer",
				"answerId"
			],
			[
				"qu",
				"question"
			],
			[
				"date",
				"dateCreated"
			],
			[
				"Ob",
				"objectId"
			],
			[
				"re",
				"required"
			],
			[
				"obj",
				"objectId"
			],
			[
				"back",
				"background-color"
			],
			[
				"i",
				"item"
			],
			[
				"ind",
				"index"
			],
			[
				"pr",
				"priority"
			],
			[
				"req",
				"required"
			],
			[
				"phone",
				"phoneHeight"
			],
			[
				"json",
				"jsonData"
			],
			[
				"fli",
				"flight"
			],
			[
				"ran",
				"randomName"
			],
			[
				"pass",
				"passengerInfo"
			],
			[
				"passen",
				"passengerInfo"
			],
			[
				"tex",
				"text-align"
			],
			[
				"bak",
				"background-color"
			],
			[
				"mar",
				"margin-bottom"
			],
			[
				"si",
				"sizeNum2"
			],
			[
				"num",
				"sizeNum1"
			],
			[
				"fon",
				"font-family"
			],
			[
				"siz",
				"sizeNum1"
			],
			[
				"is",
				"isPalendrome"
			],
			[
				"first",
				"firstAttribute"
			],
			[
				"cild",
				"childNodes"
			],
			[
				"child",
				"childNodes"
			],
			[
				"current",
				"currentNode"
			],
			[
				"has",
				"hasChild2"
			],
			[
				"curre",
				"currentNode"
			],
			[
				"unit",
				"unitData"
			],
			[
				"class",
				"className"
			],
			[
				"airlin",
				"airlineName"
			],
			[
				"ques",
				"questionsList"
			],
			[
				"lon",
				"loginService"
			],
			[
				"login",
				"loginService"
			],
			[
				"que",
				"questionFactory"
			],
			[
				"prot",
				"prototype"
			],
			[
				"slid",
				"slideLeftt"
			],
			[
				"left",
				"left"
			],
			[
				"fligh",
				"flightNo"
			],
			[
				"link",
				"links"
			],
			[
				"top",
				"topPoster"
			],
			[
				"video",
				"videos"
			],
			[
				"phot",
				"photos"
			],
			[
				"res",
				"result"
			],
			[
				"to",
				"toCheck"
			],
			[
				"auth",
				"authUrl"
			],
			[
				"process",
				"processPage"
			],
			[
				"aver",
				"averageMessageLength"
			],
			[
				"st",
				"style	Tag"
			],
			[
				"t",
				"td	Tag"
			],
			[
				"paddin",
				"padding"
			],
			[
				"aut",
				"auto"
			],
			[
				"padd",
				"padding"
			],
			[
				"printMe",
				"printMePrivate"
			],
			[
				"print",
				"printMePub"
			],
			[
				"window",
				"windowHeight"
			],
			[
				"padding",
				"padding-top"
			],
			[
				"stu",
				"stimulus_intensities"
			],
			[
				"margin",
				"margin"
			],
			[
				"user",
				"username"
			],
			[
				"up",
				"upVoted"
			],
			[
				"q",
				"question"
			],
			[
				"get",
				"getQuestion"
			],
			[
				"add",
				"addBack"
			],
			[
				"bar",
				"barPadding"
			],
			[
				"s",
				"scope"
			],
			[
				"pro",
				"promise"
			],
			[
				"d3",
				"d3js"
			],
			[
				"on",
				"onScriptLoad"
			],
			[
				"script",
				"d3ScriptTag"
			],
			[
				"User",
				"userSchema"
			],
			[
				"body",
				"bodyParser"
			],
			[
				"angula",
				"angularjs"
			],
			[
				"di",
				"display"
			],
			[
				"imag",
				"imageBinary"
			],
			[
				"img",
				"imgURL"
			],
			[
				"load",
				"load-more"
			],
			[
				"map",
				"mapCanvas"
			],
			[
				"lcal",
				"localStorage"
			],
			[
				"wid",
				"width"
			],
			[
				"bacl",
				"background-color"
			],
			[
				"text",
				"textarea	Tag"
			],
			[
				"nu",
				"numberSequenceLength"
			],
			[
				"number",
				"numberSequence"
			],
			[
				"ori",
				"originIsWhitelisted"
			],
			[
				"index",
				"indexOf"
			],
			[
				"callback",
				"callback"
			],
			[
				"question",
				"question_id"
			],
			[
				"op",
				"opacity"
			],
			[
				"fun",
				"function"
			],
			[
				"quesion",
				"questions"
			],
			[
				"men",
				"menuOpen"
			],
			[
				"me",
				"menuOpen"
			],
			[
				"border",
				"border-radius"
			],
			[
				"brow",
				"browserFactoryTest"
			],
			[
				"scr",
				"scripts"
			],
			[
				"pos",
				"position"
			],
			[
				"box",
				"box-sizing"
			],
			[
				"url",
				"urlRouterProvider"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 369.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"",
				"Sort Lines"
			]
		],
		"width": 449.0
	},
	"console":
	{
		"height": 707.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			" import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://sublime.wbond.net/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) "
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/nathan/Desktop/melts/Client/teacher/unit/unit.js",
		"/home/nathan/Desktop/melts/Client/templates/teacherUnit.html",
		"/home/nathan/Desktop/melts/Client/templates/teacherStartPage.html",
		"/home/nathan/Desktop/melts/Client/templates/studentStartPage.html",
		"/home/nathan/Desktop/melts/Client/app.js",
		"/home/nathan/Desktop/melts/Client/index.html",
		"/home/nathan/Desktop/melts/Client/templates/unit.html",
		"/home/nathan/Desktop/melts/README.md",
		"/home/nathan/Desktop/QnA Comparison/minimum.js",
		"/home/nathan/Desktop/QnA Comparison/average.js",
		"/home/nathan/Desktop/QnA Comparison/maximum.js",
		"/home/nathan/Desktop/QnA Comparison/titles.html",
		"/home/nathan/Desktop/QnA Comparison/titles2.html",
		"/home/nathan/Desktop/QnA Comparison/titles.js",
		"/home/nathan/Desktop/melts/Server/app.js",
		"/home/nathan/Desktop/melts/Server/bin/www",
		"/home/nathan/Desktop/melts/.gitignore",
		"/home/nathan/Desktop/melts/Server/package.json",
		"/home/nathan/Desktop/melts/Client/bower.json",
		"/home/nathan/Desktop/QnA Comparison/titles.json",
		"/home/nathan/Desktop/QnA Comparison/colors.js",
		"/home/nathan/Desktop/QnA Comparison/data.json",
		"/home/nathan/Desktop/k-means-d3/index.html",
		"/home/nathan/Desktop/QnA Comparison/node_modules/tsv/test/fb.json",
		"/home/nathan/Desktop/QnA Comparison/node_modules/tsv/index.js",
		"/home/nathan/Desktop/QnA Comparison/node_modules/tsv/package.json",
		"/home/nathan/Desktop/QnA Comparison/node_modules/tsv/.npmignore",
		"/home/nathan/Desktop/QnA Comparison/node_modules/tsv/README.md",
		"/home/nathan/Desktop/node/titles.js",
		"/home/nathan/.bashrc",
		"/home/nathan/.npmrc",
		"/home/nathan/Scripts/shortcuts.sh",
		"/home/nathan/Scripts/open",
		"/home/nathan/Scripts/back",
		"/home/nathan/Desktop/melts/.gitattributes",
		"/home/nathan/Desktop/melts/Client/package.json",
		"/home/nathan/Desktop/melts/Client/.bowerrc",
		"/home/nathan/Desktop/melts/Client/.travis.yml",
		"/home/nathan/Desktop/melts/Client/.editorconfig",
		"/home/nathan/Desktop/melts/Client/.jshintrc",
		"/home/nathan/Desktop/melts-core/index.js",
		"/home/nathan/Desktop/melts-core/routes/users.js",
		"/home/nathan/Desktop/melts-core/models/user.js",
		"/home/nathan/Desktop/melts-angular/app/index.html",
		"/home/nathan/Desktop/kusema/Client/scripts/app.js",
		"/home/nathan/Desktop/kusema/Client/scripts/controllers/MainController.js",
		"/home/nathan/Desktop/kusema/Client/index.html",
		"/home/nathan/Desktop/kusema/Client/views/main.html",
		"/home/nathan/Desktop/kusema/Client/scripts/controllers/MenuController.js",
		"/home/nathan/Desktop/kusema/Client/scripts/directives/menu.css",
		"/home/nathan/Desktop/kusema/Client/scripts/directives/menuDirective.js",
		"/home/nathan/Desktop/kusema/Client/styles/material.css",
		"/home/nathan/Desktop/kusema/Client/bower_components/material-design-icons/iconfont/README.md",
		"/home/nathan/Desktop/kusema/Client/bower.json",
		"/home/nathan/Desktop/kusema/Client/bower_components/angular-material/angular-material.css",
		"/home/nathan/Desktop/kusema/Client/login.html",
		"/home/nathan/Desktop/kusema/Client/views/login.html",
		"/home/nathan/Desktop/kusema/Client/styles/main.css",
		"/home/nathan/Desktop/kusema/Client/bower_components/angular-material/angular-material.js",
		"/home/nathan/Desktop/ui-bootstrap/bower_components/angular-bootstrap/ui-bootstrap.js",
		"/home/nathan/Desktop/ui-bootstrap/index.html",
		"/home/nathan/Desktop/ui-bootstrap/bower_components/angular-bootstrap/ui-bootstrap-csp.css",
		"/home/nathan/Desktop/ui-bootstrap/boot.css",
		"/home/nathan/Desktop/ui-bootstrap/app.js",
		"/home/nathan/Desktop/ui-bootstrap/bower_components/angular-bootstrap/bower.json",
		"/home/nathan/Desktop/ui-bootstrap/bower.json",
		"/home/nathan/Desktop/melts testing/index.html",
		"/home/nathan/Desktop/melts/melts/app.js",
		"/home/nathan/Desktop/melts/melts/public/index.html",
		"/home/nathan/Desktop/material-start/app/index.html",
		"/home/nathan/Desktop/material-start/app/src/users/UserService.js",
		"/home/nathan/Desktop/melts testing/bs.js",
		"/home/nathan/Desktop/k-means-d3/d3.min.js",
		"/home/nathan/Desktop/play.js",
		"/home/nathan/Desktop/lst/public/app.js",
		"/home/nathan/Desktop/lst/public/index.html",
		"/home/nathan/Desktop/melts/melts/routes/users.js",
		"/home/nathan/Desktop/melts/melts/routes/index.js",
		"/home/nathan/Desktop/melts/melts/public/javascript/app.js",
		"/home/nathan/Desktop/lst/server.js",
		"/home/nathan/Desktop/week 10 assessment/Marking Notes",
		"/home/nathan/Desktop/week 10 assessment/72/testing.js",
		"/home/nathan/Desktop/week 10 assessment/71/testing.js",
		"/home/nathan/Desktop/week 10 assessment/70/Team 70 - wk10assessment.js",
		"/home/nathan/Desktop/week 10 assessment/69/Testing",
		"/home/nathan/Desktop/assignment2/code/scripts/RoutesListPageController.js",
		"/home/nathan/Desktop/assignment2/solution.js",
		"/home/nathan/Desktop/week 10 assessment/95/testing.js",
		"/home/nathan/Desktop/assignment2/code/scripts/Skeleton.js",
		"/home/nathan/Desktop/assignment2/code/scripts/main.js",
		"/home/nathan/Desktop/week 10 assessment/94/Code.js",
		"/home/nathan/Desktop/week 10 assessment/93/testing.js",
		"/home/nathan/Desktop/week 10 assessment/92/testing.js",
		"/home/nathan/Desktop/week 10 assessment/44/testing.js",
		"/home/nathan/Desktop/week 10 assessment/43/Week 10 prac assessment code.js",
		"/home/nathan/Desktop/week 10 assessment/42/testing.js",
		"/home/nathan/Desktop/week 10 assessment/41/Prac 10 Assignment.js",
		"/home/nathan/Downloads/Prac 10 Assignment.js",
		"/home/nathan/Desktop/week 10 assessment/115/testing.js",
		"/home/nathan/Desktop/test/test.html",
		"/home/nathan/Desktop/week 10 assessment/114/ACCEPTANCE TEST CODE (ANDREWH)",
		"/home/nathan/Desktop/week 10 assessment/113/testing.js",
		"/home/nathan/Desktop/week 10 assessment/112/Testing.js",
		"/home/nathan/Desktop/week 10 assessment/113",
		"/home/nathan/Desktop/kusema/Server/controllers/questions.js",
		"/home/nathan/Desktop/d3/index.html",
		"/home/nathan/Desktop/assignment2/code/scripts/MapPageController.js",
		"/home/nathan/Desktop/assignment2/code/scripts/MapWithOverlay.js",
		"/home/nathan/Desktop/exam notes",
		"/home/nathan/Desktop/kusema/Server/models/common/contentMethods.js",
		"/home/nathan/Desktop/testttttt..js",
		"/home/nathan/Desktop/kusema/Server/models/common/media.js",
		"/home/nathan/Desktop/kusema/Server/controllers/groups.js",
		"/home/nathan/Desktop/kusema/Server/models/question.js",
		"/home/nathan/Desktop/kusema/Server/routes/api.js",
		"/home/nathan/Desktop/kusema/Server/server.js",
		"/home/nathan/Desktop/kusema/Server/models/answer.js",
		"/home/nathan/Desktop/kusema/Server/models/comment.js",
		"/home/nathan/Desktop/kusema/Server/models/group.js",
		"/home/nathan/Desktop/kusema/Server/controllers/comments.js",
		"/home/nathan/Desktop/kusema/Server/controllers/answers.js",
		"/home/nathan/Desktop/kusema/Server/models/interaction.js",
		"/home/nathan/Desktop/kusema/Server/routes/account.js",
		"/home/nathan/Desktop/kusema/Server/controllers/common.js",
		"/home/nathan/Desktop/kusema/Server/models/content.js",
		"/home/nathan/Desktop/kusema/Server/models/common/commonMethods.js",
		"/home/nathan/Desktop/kusema/Server/models/common/content.js",
		"/home/nathan/Desktop/kusema/Server/bin/kusema"
	],
	"find":
	{
		"height": 26.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"Contro",
			"Unit",
			"teacherUnit",
			"UnitCon",
			"question",
			"My U",
			"h1",
			"todo",
			"70",
			"min",
			"main",
			"svg",
			"ave",
			"type",
			"Aver",
			"#",
			"ticks",
			"data",
			"titles",
			"bw",
			" +",
			"md",
			"d",
			"  var doneList = [false, false, false];\n",
			"14",
			"Reddit",
			"length",
			"Menu",
			">\n",
			"40px",
			"\">",
			"content",
			"glyph",
			"xScal",
			"xSca",
			"500",
			"r\"",
			"data",
			"means",
			"handl",
			"well",
			"we",
			"well",
			"handle",
			"items[0]",
			"update",
			"tobac",
			"tobak",
			"console.",
			"console.log",
			"\n    ",
			"console",
			"setCurrentIfNone",
			"      \n",
			"potential",
			"\n	",
			"circle",
			"foo",
			"segmentsIntersectionPoint",
			"new-it",
			"inpu",
			"\n		",
			"fff",
			"question",
			"Question",
			"answer",
			"Answer",
			"\n	",
			"conte",
			"var mongoose = require('mongoose');\nvar objectId = mongoose.Schema.Types.ObjectId;\nvar content  = require('./common/media');\n\n// Schema definition\nvar questionSchema = mongoose.Schema({\n    title:          { type: String, required: true },\n    author:         { type: objectId, ref: 'User', required: true },\n    anonymous:      { type: Boolean, required: true },\n    message:        { type: String, required: true },\n    topics:         [{ type: objectId, ref: 'Topic' }],\n    group:          { type: objectId, ref: 'Group', required: true },\n    images:         [{ type: content.imageModel }],\n    videos:         [{ type: content.videoModel }],\n    code:           [{ type: content.codeModel }],\n    dateCreated:    { type: Date, default: Date.now },\n    dateModified:   { type: Date, default: null },\n    upVotes:        [{ type: objectId, ref: 'User' }],\n    downVotes:      [{ type: objectId, ref: 'User' }],\n    deleted:        { type: Boolean, default: false }\n})\n\nquestionSchema.methods.hello = function (cb) {\n    return this.model('Animal').find({ type: this.type }, cb);\n}\n\n\n\n// Indexes\nquestionSchema.index({ topics: 1, dateCreated: -1 });\nquestionSchema.index({ author: 1, dateCreated: -1 });\nquestionSchema.index({ group: 1, dateCreated: -1 });\nquestionSchema.index({ upVotes: 1 });\nquestionSchema.index({ downVotes: 1 });\nquestionSchema.path('title').index({text : true});\nquestionSchema.path('message').index({text : true});\n\nmodule.exports = mongoose.model('Question', questionSchema);",
			">\n",
			"initialiseWithOptions",
			"req",
			"area",
			"Area",
			"Unit",
			"unit",
			"Unit",
			"que",
			"area",
			"unit",
			"author",
			"ques",
			"co",
			"com",
			"comm",
			"##",
			"electrical",
			"mappagedraw",
			"mappage",
			"htt",
			"curren",
			"prio",
			"pro",
			"if ( bank_holidays.indexOf( '06/04/2012' ) > -1 )",
			"prio",
			"console.l",
			"newit",
			"backlo",
			"=backlog",
			"\n		",
			"keyCode",
			"done",
			"smo",
			"smoothin",
			"beta",
			"betya",
			"height",
			"tofix",
			"array",
			"height",
			"list",
			"fav",
			"fave",
			"fav",
			"height",
			"heigh",
			"i",
			"Palendrome",
			"k",
			"place",
			"value",
			"show",
			"lectu",
			"border-ra",
			"col",
			"getu",
			"get"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"comment",
			"Comment",
			"question",
			"Question",
			"area",
			"Topic",
			"Group",
			"group",
			"Group",
			"topic",
			"group",
			"Palindrome",
			"",
			"console.log(",
			"localhost",
			"discussionsDb",
			"2c1e3a",
			"question",
			"875ab2",
			"46cc8e"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 26.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "index.sublime-project",
	"replace":
	{
		"height": 48.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 224.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
